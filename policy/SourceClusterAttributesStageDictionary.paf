#<?cfg paf dictionary ?>

target: lsst.ap.cluster.SourceClusterAttributesStage

definitions: {

    # input clipboard keys
    inputKeys: {
        type: policy
        dictionary: {
            definitions: {
                jobIdentity: {
                    type: string
                    description: "Key for a lsst.daf.base.PropertySet (e.g.
                                  corresponding to an event) or a Python dict
                                  (e.g. corresponding to a job) which must 
                                  contain an integer valued key identified by
                                  'inputKeys.skyTileId'.
                                 "
                    maxOccurs: 1
                    default: "jobIdentity"
                }
                skyTileId: {
                    type: string
                    description: "Key for the clipboard entry identified by
                                  'inputKeys.jobIdentity'. Must contain an 
                                  integer sky-tile id.
                                 "
                    maxOccurs: 1
                    default: "skyTileId"
                }
                sourceClusters: {
                    type: string
                    description: "Key for the source clusters to compute
                                  attributes for. The value must be a python
                                  list of lsst.afw.detection.SourceSet
                                  objects."
                    maxOccurs: 1
                    default: "sourceClusters"
                }
                exposures: {
                    type: string
                    description: "Key for an lsst.ap.match.ExposureInfoMap
                                  which maps exposure ids to
                                  lsst.ap.match.ExposureInfo objects.
                                 "
                    maxOccurs: 1
                    default: "exposures"
                }
                badSources: {
                    type: string
                    description: "Key for an
                                  lsst.afw.detection.PersistableSourceVector
                                  containing lsst.afw.detection.Source
                                  objects that were not of high enough quality
                                  to cluster.
                                 "
                    maxOccurs: 1
                    default: "badSources"
                }
                sourceClusteringPolicy: {
                    type: string
                    description: "Parameters used to generate source clusters.
                                  Avoids having to redundantly specify default 
                                  policy overrides for the source clustering
                                  and source cluster attributes stages.
                                 "
                    maxOccurs: 1
                    default: "sourceClusteringPolicy"
                }
            }
        }
        maxOccurs: 1
    }

    # output clipboard keys:
    outputKeys: {
        type: policy
        dictionary: {
            definitions: {
                sourceClusterAttributes: {
                    type: string
                    description: "Key for computed source cluster attributes (an
                                  lsst.ap.cluster.PersistableSourceClusterVector).
                                 "
                    maxOccurs: 1
                    default: "sourceClusterAttributes"
                }
                badSourceClusterAttributes: {
                    type: string
                    description: "Key for source cluster attributes computed
                                  from bad sources (an
                                  lsst.ap.cluster.PersistableSourceClusterVector).
                                  If the 'createBadClusters' policy parameter
                                  value is false, the clipboard will not
                                  contain an entry for this key.
                                 "
                    maxOccurs: 1
                    default: "badSourceClusterAttributes"
                }
            }
        }
        maxOccurs: 1
    }

    # stage parameters
    psFluxIgnoreMask: {
        type: int
        description: "A bit-mask identifying sources to ignore when computing
                      the sample mean of the PSF (point source) flux of the
                      sources in a given cluster and filter. When the detection
                      flag integer for a source has any of the mask bits set to
                      1, the source is ignored. Multiple values may be
                      specified - in this case, the bitwise-OR of all the masks
                      is used to identify which sources to ignore. Sources with
                      PSF fluxes set to NaN are ignored regardless of these
                      masks.
                     "
        # EDGE, PEAKCENTER, INTERP_CENTER, SATUR_CENTER, DETECT_NEGATIVE
        # from lsst::meas::algorithms::Flags
        default: 1 64 512 2048 4096
    }
    sgFluxIgnoreMask: {
        type: int
        description: "A bit-mask identifying sources to ignore when
                      computing the sample mean of the experimental small galaxy
                      model flux of the sources in a given cluster and filter.
                      When the detection flag integer for a source has any of
                      the mask bits set to 1, the source is ignored. Multiple
                      values may be specified - in this case, the bitwise-OR
                      of all the masks is used to identify which sources to
                      ignore. Sources with model fluxes (the current storage
                      location for experimental small galaxy flux measurements
                      in Source) set to NaN are ignored regardless of these
                      masks.
                     "
        # EDGE, PEAKCENTER, INTERP_CENTER, SATUR_CENTER, DETECT_NEGATIVE and
        # all SG flags except SHAPELET_PHOTOM_GALAXY_FAIL:
        # PHOTOM_NO_PSF PHOTOM_NO_PEAK PHOTOM_NO_SOURCE PHOTOM_NO_FOOTPRINT
        # SHAPELET_PHOTOM_NO_BASIS SHAPELET_PHOTOM_BAD_MOMENTS
        # SHAPELET_PHOTOM_INVERSION_FAIL SHAPELET_PHOTOM_INVERSION_UNSAFE
        # from lsst::meas::algorithms::Flags
        #
        # Note that PHOTOM_NO_PEAK SHAPELET_PHOTOM_INVERSION_FAIL values
        # are not powers of 2 (a bug which will not be fixed for PT1.2)
        # so we list only 6 SG flag values, rather than 8.
        default: 1 64 512 2048 4096 16384 32768 65536 131072 262144 524288
    }
    gaussianFluxIgnoreMask: {
        type: int
        description: "A bit-mask identifying sources to ignore when computing
                      the sample mean of the elliptical gaussian model flux
                      of the sources in a given cluster and filter.
                      When the detection flag integer for a source has any of
                      the mask bits set to 1, the source is ignored. Multiple
                      values may be specified - in this case, the bitwise-OR
                      of all the masks is used to identify which sources to
                      ignore. Sources with instrumental fluxes (the current
                      storage location for gaussian flux measurements in
                      Source) set to NaN are ignored regardless of these
                      masks.
                     "
        # EDGE, PEAKCENTER, INTERP_CENTER, SATUR_CENTER, DETECT_NEGATIVE
        # from lsst::meas::algorithms::Flags
        default: 1 64 512 2048 4096
    }
    ellipticityIgnoreMask: {
        type: int
        description: "A bit-mask identifying sources to ignore when computing
                      the sample means of the ellipticity parameters of the
                      sources in a given cluster and filter. When the
                      detection flag integer for a source has any of the mask
                      bits set to 1, the source is ignored. Multiple values
                      may be specified - in this case, the bitwise-OR of all
                      the masks is used to identify which sources to ignore.
                      Sources with adaptive moments set to NaN are ignored
                      regardless of these masks.
                     "
        # EDGE, SHAPE_UNWEIGHTED_BAD, PEAKCENTER,
        # INTERP_CENTER, SATUR_CENTER, DETECT_NEGATIVE
        # from lsst::meas::algorithms::Flags
        default: 1 32 64 512 2048 4096
    }
    discardNoiseClusters: {
        type: bool
        description: "A boolean flag indicating whether single source 
                      source clusters should be discarded.
                     "
        maxOccurs: 1
        default: true
    }
    fluxScale: {
        type: double
        description: "Scaling factor applied to F/F_0 prior to averaging, where
                      F is the source flux and F_0 is the flux of a 0-magnitude
                      object for the corresponding exposure.
                     "
        maxOccurs: 1
        # Chosen such that the AB magnitude -2.5*log10(fluxScale*F/F_0) - 48.6 = 0
        # when F = F_0
        default: 3.63078054770101342467371212362e-20 # erg/cm**2/sec/Hz
    }

    # source clustering algorithm parameters
    sourceClusteringPolicy: {
        type: policy
        dictionary: @SourceClusteringDictionary.paf
        description: "Parameters for the source clustering algorithm."
        maxOccurs: 1
    }
}

